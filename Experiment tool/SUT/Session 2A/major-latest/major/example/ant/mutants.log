1:LVR:0:POS:triangle.Triangle@classify(int,int,int):11:0 |==> 1
2:LVR:0:NEG:triangle.Triangle@classify(int,int,int):11:0 |==> -1
3:ROR:<=(int,int):<(int,int):triangle.Triangle@classify(int,int,int):11:a <= 0 |==> a < 0
4:ROR:<=(int,int):==(int,int):triangle.Triangle@classify(int,int,int):11:a <= 0 |==> a == 0
5:LVR:0:POS:triangle.Triangle@classify(int,int,int):11:0 |==> 1
6:LVR:0:NEG:triangle.Triangle@classify(int,int,int):11:0 |==> -1
7:ROR:<=(int,int):<(int,int):triangle.Triangle@classify(int,int,int):11:b <= 0 |==> b < 0
8:ROR:<=(int,int):==(int,int):triangle.Triangle@classify(int,int,int):11:b <= 0 |==> b == 0
9:COR:||(boolean,boolean):!=(boolean,boolean):triangle.Triangle@classify(int,int,int):11:a <= 0 || b <= 0 |==> a <= 0 != b <= 0
10:LVR:0:POS:triangle.Triangle@classify(int,int,int):11:0 |==> 1
11:LVR:0:NEG:triangle.Triangle@classify(int,int,int):11:0 |==> -1
12:ROR:<=(int,int):<(int,int):triangle.Triangle@classify(int,int,int):11:c <= 0 |==> c < 0
13:ROR:<=(int,int):==(int,int):triangle.Triangle@classify(int,int,int):11:c <= 0 |==> c == 0
14:COR:||(boolean,boolean):!=(boolean,boolean):triangle.Triangle@classify(int,int,int):11:a <= 0 || b <= 0 || c <= 0 |==> (a <= 0 || b <= 0) != c <= 0
15:STD:<RETURN>:<NO-OP>:triangle.Triangle@classify(int,int,int):12:return Type.INVALID; |==> <NO-OP>
16:LVR:0:POS:triangle.Triangle@classify(int,int,int):13:0 |==> 1
17:LVR:0:NEG:triangle.Triangle@classify(int,int,int):13:0 |==> -1
18:ROR:==(int,int):<=(int,int):triangle.Triangle@classify(int,int,int):14:a == b |==> a <= b
19:ROR:==(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):14:a == b |==> a >= b
20:LVR:POS:0:triangle.Triangle@classify(int,int,int):15:1 |==> 0
21:LVR:POS:NEG:triangle.Triangle@classify(int,int,int):15:1 |==> -1
22:AOR:+(int,int):%(int,int):triangle.Triangle@classify(int,int,int):15:trian + 1 |==> trian % 1
23:AOR:+(int,int):*(int,int):triangle.Triangle@classify(int,int,int):15:trian + 1 |==> trian * 1
24:AOR:+(int,int):-(int,int):triangle.Triangle@classify(int,int,int):15:trian + 1 |==> trian - 1
25:AOR:+(int,int):/(int,int):triangle.Triangle@classify(int,int,int):15:trian + 1 |==> trian / 1
26:STD:<ASSIGN>:<NO-OP>:triangle.Triangle@classify(int,int,int):15:trian = trian + 1; |==> <NO-OP>
27:ROR:==(int,int):<=(int,int):triangle.Triangle@classify(int,int,int):16:a == c |==> a <= c
28:ROR:==(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):16:a == c |==> a >= c
29:LVR:POS:0:triangle.Triangle@classify(int,int,int):17:2 |==> 0
30:LVR:POS:NEG:triangle.Triangle@classify(int,int,int):17:2 |==> -2
31:AOR:+(int,int):%(int,int):triangle.Triangle@classify(int,int,int):17:trian + 2 |==> trian % 2
32:AOR:+(int,int):*(int,int):triangle.Triangle@classify(int,int,int):17:trian + 2 |==> trian * 2
33:AOR:+(int,int):-(int,int):triangle.Triangle@classify(int,int,int):17:trian + 2 |==> trian - 2
34:AOR:+(int,int):/(int,int):triangle.Triangle@classify(int,int,int):17:trian + 2 |==> trian / 2
35:STD:<ASSIGN>:<NO-OP>:triangle.Triangle@classify(int,int,int):17:trian = trian + 2; |==> <NO-OP>
36:ROR:==(int,int):<=(int,int):triangle.Triangle@classify(int,int,int):18:b == c |==> b <= c
37:ROR:==(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):18:b == c |==> b >= c
38:LVR:POS:0:triangle.Triangle@classify(int,int,int):19:3 |==> 0
39:LVR:POS:NEG:triangle.Triangle@classify(int,int,int):19:3 |==> -3
40:AOR:+(int,int):%(int,int):triangle.Triangle@classify(int,int,int):19:trian + 3 |==> trian % 3
41:AOR:+(int,int):*(int,int):triangle.Triangle@classify(int,int,int):19:trian + 3 |==> trian * 3
42:AOR:+(int,int):-(int,int):triangle.Triangle@classify(int,int,int):19:trian + 3 |==> trian - 3
43:AOR:+(int,int):/(int,int):triangle.Triangle@classify(int,int,int):19:trian + 3 |==> trian / 3
44:STD:<ASSIGN>:<NO-OP>:triangle.Triangle@classify(int,int,int):19:trian = trian + 3; |==> <NO-OP>
45:LVR:0:POS:triangle.Triangle@classify(int,int,int):20:0 |==> 1
46:LVR:0:NEG:triangle.Triangle@classify(int,int,int):20:0 |==> -1
47:ROR:==(int,int):<=(int,int):triangle.Triangle@classify(int,int,int):20:trian == 0 |==> trian <= 0
48:ROR:==(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):20:trian == 0 |==> trian >= 0
49:AOR:+(int,int):%(int,int):triangle.Triangle@classify(int,int,int):21:a + b |==> a % b
50:AOR:+(int,int):*(int,int):triangle.Triangle@classify(int,int,int):21:a + b |==> a * b
51:AOR:+(int,int):-(int,int):triangle.Triangle@classify(int,int,int):21:a + b |==> a - b
52:AOR:+(int,int):/(int,int):triangle.Triangle@classify(int,int,int):21:a + b |==> a / b
53:ROR:<=(int,int):<(int,int):triangle.Triangle@classify(int,int,int):21:a + b <= c |==> a + b < c
54:ROR:<=(int,int):==(int,int):triangle.Triangle@classify(int,int,int):21:a + b <= c |==> a + b == c
55:AOR:+(int,int):%(int,int):triangle.Triangle@classify(int,int,int):21:a + c |==> a % c
56:AOR:+(int,int):*(int,int):triangle.Triangle@classify(int,int,int):21:a + c |==> a * c
57:AOR:+(int,int):-(int,int):triangle.Triangle@classify(int,int,int):21:a + c |==> a - c
58:AOR:+(int,int):/(int,int):triangle.Triangle@classify(int,int,int):21:a + c |==> a / c
59:ROR:<=(int,int):<(int,int):triangle.Triangle@classify(int,int,int):21:a + c <= b |==> a + c < b
60:ROR:<=(int,int):==(int,int):triangle.Triangle@classify(int,int,int):21:a + c <= b |==> a + c == b
61:COR:||(boolean,boolean):!=(boolean,boolean):triangle.Triangle@classify(int,int,int):21:a + b <= c || a + c <= b |==> a + b <= c != a + c <= b
62:AOR:+(int,int):%(int,int):triangle.Triangle@classify(int,int,int):21:b + c |==> b % c
63:AOR:+(int,int):*(int,int):triangle.Triangle@classify(int,int,int):21:b + c |==> b * c
64:AOR:+(int,int):-(int,int):triangle.Triangle@classify(int,int,int):21:b + c |==> b - c
65:AOR:+(int,int):/(int,int):triangle.Triangle@classify(int,int,int):21:b + c |==> b / c
66:ROR:<=(int,int):<(int,int):triangle.Triangle@classify(int,int,int):21:b + c <= a |==> b + c < a
67:ROR:<=(int,int):==(int,int):triangle.Triangle@classify(int,int,int):21:b + c <= a |==> b + c == a
68:COR:||(boolean,boolean):!=(boolean,boolean):triangle.Triangle@classify(int,int,int):21:a + b <= c || a + c <= b || b + c <= a |==> (a + b <= c || a + c <= b) != b + c <= a
69:STD:<RETURN>:<NO-OP>:triangle.Triangle@classify(int,int,int):22:return Type.INVALID; |==> <NO-OP>
70:STD:<RETURN>:<NO-OP>:triangle.Triangle@classify(int,int,int):24:return Type.SCALENE; |==> <NO-OP>
71:LVR:POS:0:triangle.Triangle@classify(int,int,int):25:3 |==> 0
72:LVR:POS:NEG:triangle.Triangle@classify(int,int,int):25:3 |==> -3
73:ROR:>(int,int):!=(int,int):triangle.Triangle@classify(int,int,int):25:trian > 3 |==> trian != 3
74:ROR:>(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):25:trian > 3 |==> trian >= 3
75:STD:<RETURN>:<NO-OP>:triangle.Triangle@classify(int,int,int):26:return Type.EQUILATERAL; |==> <NO-OP>
76:LVR:POS:0:triangle.Triangle@classify(int,int,int):27:1 |==> 0
77:LVR:POS:NEG:triangle.Triangle@classify(int,int,int):27:1 |==> -1
78:ROR:==(int,int):<=(int,int):triangle.Triangle@classify(int,int,int):27:trian == 1 |==> trian <= 1
79:ROR:==(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):27:trian == 1 |==> trian >= 1
80:AOR:+(int,int):%(int,int):triangle.Triangle@classify(int,int,int):27:a + b |==> a % b
81:AOR:+(int,int):*(int,int):triangle.Triangle@classify(int,int,int):27:a + b |==> a * b
82:AOR:+(int,int):-(int,int):triangle.Triangle@classify(int,int,int):27:a + b |==> a - b
83:AOR:+(int,int):/(int,int):triangle.Triangle@classify(int,int,int):27:a + b |==> a / b
84:ROR:>(int,int):!=(int,int):triangle.Triangle@classify(int,int,int):27:a + b > c |==> a + b != c
85:ROR:>(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):27:a + b > c |==> a + b >= c
86:COR:&&(boolean,boolean):==(boolean,boolean):triangle.Triangle@classify(int,int,int):27:trian == 1 && a + b > c |==> trian == 1 == a + b > c
87:STD:<RETURN>:<NO-OP>:triangle.Triangle@classify(int,int,int):28:return Type.ISOSCELES; |==> <NO-OP>
88:LVR:POS:0:triangle.Triangle@classify(int,int,int):29:2 |==> 0
89:LVR:POS:NEG:triangle.Triangle@classify(int,int,int):29:2 |==> -2
90:ROR:==(int,int):<=(int,int):triangle.Triangle@classify(int,int,int):29:trian == 2 |==> trian <= 2
91:ROR:==(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):29:trian == 2 |==> trian >= 2
92:AOR:+(int,int):%(int,int):triangle.Triangle@classify(int,int,int):29:a + c |==> a % c
93:AOR:+(int,int):*(int,int):triangle.Triangle@classify(int,int,int):29:a + c |==> a * c
94:AOR:+(int,int):-(int,int):triangle.Triangle@classify(int,int,int):29:a + c |==> a - c
95:AOR:+(int,int):/(int,int):triangle.Triangle@classify(int,int,int):29:a + c |==> a / c
96:ROR:>(int,int):!=(int,int):triangle.Triangle@classify(int,int,int):29:a + c > b |==> a + c != b
97:ROR:>(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):29:a + c > b |==> a + c >= b
98:COR:&&(boolean,boolean):==(boolean,boolean):triangle.Triangle@classify(int,int,int):29:trian == 2 && a + c > b |==> trian == 2 == a + c > b
99:STD:<RETURN>:<NO-OP>:triangle.Triangle@classify(int,int,int):30:return Type.ISOSCELES; |==> <NO-OP>
100:LVR:POS:0:triangle.Triangle@classify(int,int,int):31:3 |==> 0
101:LVR:POS:NEG:triangle.Triangle@classify(int,int,int):31:3 |==> -3
102:ROR:==(int,int):<=(int,int):triangle.Triangle@classify(int,int,int):31:trian == 3 |==> trian <= 3
103:ROR:==(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):31:trian == 3 |==> trian >= 3
104:AOR:+(int,int):%(int,int):triangle.Triangle@classify(int,int,int):31:b + c |==> b % c
105:AOR:+(int,int):*(int,int):triangle.Triangle@classify(int,int,int):31:b + c |==> b * c
106:AOR:+(int,int):-(int,int):triangle.Triangle@classify(int,int,int):31:b + c |==> b - c
107:AOR:+(int,int):/(int,int):triangle.Triangle@classify(int,int,int):31:b + c |==> b / c
108:ROR:>(int,int):!=(int,int):triangle.Triangle@classify(int,int,int):31:b + c > a |==> b + c != a
109:ROR:>(int,int):>=(int,int):triangle.Triangle@classify(int,int,int):31:b + c > a |==> b + c >= a
110:COR:&&(boolean,boolean):==(boolean,boolean):triangle.Triangle@classify(int,int,int):31:trian == 3 && b + c > a |==> trian == 3 == b + c > a
111:STD:<RETURN>:<NO-OP>:triangle.Triangle@classify(int,int,int):32:return Type.ISOSCELES; |==> <NO-OP>
112:EVR:<MEMBER_SELECT(triangle.Triangle.Type)>:<DEFAULT>:triangle.Triangle@classify(int,int,int):33:Type.INVALID |==> null
